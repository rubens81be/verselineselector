<Window x:Class="VerselineSelector.WPF.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"         
        xmlns:converter="clr-namespace:VerselineSelector.WPF.View.ValueConverters"
        xmlns:behaviour="clr-namespace:VerselineSelector.WPF.View.AttachedProperties"
        xmlns:viewmodel="clr-namespace:VerselineSelector.WPF.ViewModel" 
        xmlns:wv="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        d:DataContext="{d:DesignInstance Type=viewmodel:MainWindowViewModel}"
        mc:Ignorable="d" Title="Paragraafwettekst inzien" Height="900" Width="985">
    <Window.Resources>
        <converter:MarginConverter x:Key="MarginConverter" />
        <converter:VisibilityConverter x:Key="VisibilityConverter" />
        <converter:BoolToInverseVisibilityConverter x:Key="InverseVisibilityConverter" />
        <converter:BoolToFontWeightBoldConverter x:Key="FontWeightBoldConverter" />
        <converter:BoolToBrushConverter x:Key="ColourConverter" />
        <converter:FontAwesomeIconConverter x:Key="IconConverter" />
        <converter:StringConverter x:Key="StringConverter" />
    </Window.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" LastChildFill="False" Margin="10,5">
            <StackPanel Orientation="Horizontal">
                <Label Target="CurrentParagraph" Content="Paragraaf:" Padding="5,3" />
                <ComboBox x:Name="CurrentParagraph" DockPanel.Dock="Left" ItemsSource="{Binding Paragraphs}" SelectedItem="{Binding CurrentParagraph}" DisplayMemberPath="Paragraph.Title" Width="100" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Target="CurrentPatient" Content="Patiënt:" Padding="5,3" />
                <ComboBox x:Name="CurrentPatient" DockPanel.Dock="Left" ItemsSource="{Binding Patients}" SelectedItem="{Binding CurrentPatient}" Width="100" />
            </StackPanel>
            <TextBlock DockPanel.Dock="Left" Text="{Binding SelectedVerselines, Converter={StaticResource StringConverter}}" VerticalAlignment="Center" TextAlignment="Center" Padding="5,3" />
            <TextBox DockPanel.Dock="Right" Width="350" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding CanSearch}" VerticalContentAlignment="Center" />
            <fa:IconBlock Icon="Search" DockPanel.Dock="Right" Margin="5,0" Foreground="{Binding CanSearch, Converter={StaticResource ColourConverter}, ConverterParameter=Search}" />
        </DockPanel>

        <TabControl Grid.Row="1" Margin="10" BorderThickness="1" SelectedIndex="{Binding TabItemIndex}" Visibility="{Binding CurrentParagraph, Converter={StaticResource VisibilityConverter}}">
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <fa:IconBlock Icon="{Binding IsComplete, Converter={StaticResource IconConverter}}" Foreground="{Binding IsComplete, Converter={StaticResource ColourConverter}}" Margin="0,3,5,0" />
                        <TextBlock Text="{Binding CurrentParagraph.Paragraph.Description}" MaxWidth="300" TextTrimming="WordEllipsis" ToolTip="{Binding CurrentParagraph.Paragraph.Description}" />
                    </StackPanel>
                </TabItem.Header>
                <ListView ItemsSource="{Binding Verselines}" SelectionMode="Single" BorderThickness="0">
                    <!--<ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate  TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" TextBlock.FontFamily="Segoe UI">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"                                                               
                                                              Content="{TemplateBinding Content}" 
                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"                                                             
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="#E6E6E3"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="Red"/>
                                                <Setter Property="BorderThickness" TargetName="Bd" Value="0,1" />
                                                <Setter Property="Margin" TargetName="Bd" Value="1,0" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="Orange"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="Yellow"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>-->
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Verseline.Sequence}" TextAlignment="Right" Margin="0,0,5,0" Width="15" Foreground="DarkGray" />
                                <TextBlock Text="{Binding Verseline.VerselineNumber}" TextAlignment="Right" Margin="5,0" Width="40" Foreground="DarkGray" />
                                <StackPanel Width="20" HorizontalAlignment="Center" Visibility="{Binding Path=HasAdditionalInformation, Converter={StaticResource VisibilityConverter}}" Margin="0,2">
                                    <fa:IconBlock Icon="{Binding DataContext.IsComplete, RelativeSource={RelativeSource AncestorType=ListView}, Converter={StaticResource IconConverter}}" Width="15" Margin="0,2" ToolTip="Aanvraag voldaan?"
                                            Visibility="{Binding IsParagraphTitle, Converter={StaticResource VisibilityConverter}}" 
                                            Foreground="{Binding DataContext.IsComplete, RelativeSource={RelativeSource AncestorType=ListView}, Converter={StaticResource ColourConverter}}"/>
                                    <fa:IconBlock Icon="{Binding Verseline.SexRestriction, Converter={StaticResource IconConverter}}" Width="15" Margin="0,2" ToolTip="Toegelaten geslacht"
                                            Visibility="{Binding Verseline.SexRestriction, Converter={StaticResource VisibilityConverter}}"
                                            Foreground="{Binding IsSexRestrictionSatisfied, Converter={StaticResource ColourConverter}}" />
                                    <fa:IconBlock Icon="CakeCandles" Width="15" Margin="0,2" ToolTip="{Binding AgeAuthorizationAsString}"
                                            Visibility="{Binding AgeAuthorizationAsString, Converter={StaticResource VisibilityConverter}}"
                                            Foreground="{Binding IsAgeRestrictionSatisfied, Converter={StaticResource ColourConverter}}" />
                                    <TextBlock Width="Auto" HorizontalAlignment="Center" Visibility="{Binding Verseline.AnnexMandatory, Converter={StaticResource VisibilityConverter}}" >
                                        <Hyperlink Command="{Binding DataContext.AddAnnexCommand, RelativeSource={RelativeSource AncestorType=ListView}}" TextDecorations="{x:Null}">
                                            <Hyperlink.Style>
                                                <Style TargetType="Hyperlink" BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                    <Setter Property="Foreground" Value="Black"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="fa:IconBlock.Foreground" Value="Navy" />                                                            
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Hyperlink.Style>
                                            <fa:IconBlock Icon="FileCircleExclamation" Margin="0,2" Width="15" ToolTip="Verplichte bijlage" />
                                        </Hyperlink>
                                    </TextBlock>
                                    <fa:IconBlock Icon="CircleExclamation" Margin="0,2" Width="15" ToolTip="Exclusie" 
                                            Visibility="{Binding Verseline.Type, Converter={StaticResource VisibilityConverter}}" />
                                </StackPanel>
                                <TextBlock Width="{Binding IndentationLevel}" />
                                <TextBlock Text="{Binding MinimalChecksAsString}" HorizontalAlignment="Right" Width="25" 
                                    Visibility="{Binding Verseline.HasCheckbox, Converter={StaticResource InverseVisibilityConverter}}"
                                    Foreground="{Binding IsMinimumCheckConditionSatisfied, Converter={StaticResource ColourConverter}}"/>
                                <CheckBox  IsChecked="{Binding IsChecked}" Command="{Binding DataContext.SelectVerselineCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"
                                    HorizontalAlignment="Right" Margin="0,0,15,0" Width="25" Visibility="{Binding Verseline.HasCheckbox, Converter={StaticResource VisibilityConverter}}" 
                                    IsEnabled="{Binding CanCheck}"/>
                                <TextBlock Margin="5,0,0,0" Width="700" TextWrapping="Wrap" FontWeight="{Binding IsParagraphTitle, Converter={StaticResource FontWeightBoldConverter}}"
                                    behaviour:TextBlockBehavior.InlineSource="{Binding InlineCollection}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </TabItem>
            <TabItem Visibility="{Binding CurrentParagraph.RequestFormA, Converter={StaticResource VisibilityConverter}}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <fa:IconBlock Icon="Readme" Margin="0,3,5,0" />
                        <TextBlock Text="Bijlage" ToolTip="{Binding CurrentParagraph.RequestFormA.Uri}"/>
                    </StackPanel>
                </TabItem.Header>
                <wv:WebView2 Source="about:blank" behaviour:WebBrowserBehavior.BindableSource="{Binding CurrentParagraph.RequestFormA.Uri}" />
            </TabItem>
        </TabControl>
    </Grid>
</Window>
